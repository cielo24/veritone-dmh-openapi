{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0-SNAPSHOT",
    "title": "Veritone DMH API"
  },
  "basePath": "/assets-api",
  "tags": [
    {
      "name": "Clip"
    },
    {
      "name": "Filter"
    },
    {
      "name": "Rendition Types"
    },
    {
      "name": "Clip Metadata Transform"
    },
    {
      "name": "Rendition URL"
    },
    {
      "name": "Search"
    },
    {
      "name": "Collection Summary"
    },
    {
      "name": "Asset Information"
    },
    {
      "name": "Gallery Search Result"
    }
  ],
  "paths": {
    "/v1/assetInfo/anonymous/view/{assetId}": {
      "get": {
        "tags": [
          "Asset Information"
        ],
        "summary": "Get the asset's quick view information.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getAnonymousAssetView",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "siteName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetFieldsName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The asset's quick view data was returned successfully",
            "schema": {
              "$ref": "#/definitions/AssetQuickView"
            }
          }
        }
      }
    },
    "/v1/assetInfo/anonymous/view/{viewType}/{assetId}": {
      "get": {
        "tags": [
          "Asset Information"
        ],
        "summary": "Get the asset's quick view information.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getAnonymousAssetViewWithType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "viewType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "GridView",
              "TextView",
              "SpeedView",
              "ListView",
              "CartView",
              "OrderView"
            ]
          },
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "siteName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The asset's quick view data was returned successfully",
            "schema": {
              "$ref": "#/definitions/AssetQuickView"
            }
          }
        }
      }
    },
    "/v1/assetInfo/view/clip/{assetId}/{parent}/{parentId}": {
      "get": {
        "tags": [
          "Asset Information"
        ],
        "summary": "Get asset quick view information for asset in parent object.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getAssetView",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "parent",
            "in": "path",
            "description": "Parent entity through which access to asset is controlled.  One of collection, quote, order",
            "required": true,
            "type": "collection",
            "pattern": "collection|quote|order",
            "x-example": "collection"
          },
          {
            "name": "parentId",
            "in": "path",
            "description": "The id value for the parent entity",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "assetFieldsName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The asset quick view data was returned successfully",
            "schema": {
              "$ref": "#/definitions/AssetQuickView"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/assetInfo/view/{assetId}": {
      "get": {
        "tags": [
          "Asset Information"
        ],
        "summary": "Get asset quick view information.  This endpoint uses search to determine access to asset.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getAssetView_get_v1_assetInfo_view_by_assetId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "assetFieldsName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The asset quick view data was returned successfully",
            "schema": {
              "$ref": "#/definitions/AssetQuickView"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/assetInfo/view/{viewType}/clip/{assetId}/{parent}/{parentId}": {
      "get": {
        "tags": [
          "Asset Information"
        ],
        "summary": "Get asset quick view information for asset in parent object.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getAssetViewWithType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "viewType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "GridView",
              "TextView",
              "SpeedView",
              "ListView",
              "CartView",
              "OrderView"
            ]
          },
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "parent",
            "in": "path",
            "description": "Parent entity through which access to asset is controlled.  One of collection, quote, order",
            "required": true,
            "type": "collection",
            "pattern": "collection|quote|order",
            "x-example": "collection"
          },
          {
            "name": "parentId",
            "in": "path",
            "description": "The id value for the parent entity",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The asset quick view data was returned successfully",
            "schema": {
              "$ref": "#/definitions/AssetQuickView"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/assetInfo/view/{viewType}/{assetId}": {
      "get": {
        "tags": [
          "Asset Information"
        ],
        "summary": "Get asset quick view information.  This endpoint uses search to determine access to asset.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getAssetViewWithType_get_v1_assetInfo_view_by_viewType_by_assetId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "viewType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "GridView",
              "TextView",
              "SpeedView",
              "ListView",
              "CartView",
              "OrderView"
            ]
          },
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The asset quick view data was returned successfully",
            "schema": {
              "$ref": "#/definitions/AssetQuickView"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/clip": {
      "post": {
        "tags": [
          "Clip"
        ],
        "summary": "Create a clip.",
        "description": "<strong>Required Permissions</strong>: CreateClips\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "clipCreate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NewClipRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Clip"
            }
          }
        },
        "x-requiredPermissions": "CreateClips"
      }
    },
    "/v1/clip/byIds": {
      "get": {
        "tags": [
          "Clip"
        ],
        "summary": "Get a list of clips.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "clipList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Comma separated list of ids to retrieve",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "query",
            "description": "Name of site where asset is located",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeFormat",
            "in": "query",
            "description": "Time Format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The clips were found and returned",
            "schema": {
              "$ref": "#/definitions/ApiList"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No clips were found"
          }
        }
      }
    },
    "/v1/clip/cacheStats": {
      "get": {
        "tags": [
          "Clip"
        ],
        "summary": "Retrieve clip metadata and renditions.",
        "description": "<strong>Required Permissions</strong>: Root\n\n<strong>Developer Information</strong>: Returns the clipData fields and preview rendition URLs for a single clip. The fields parameter allows the return of a specific set of clipData fields.\n\n",
        "operationId": "clipGet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The clip was found and returned",
            "schema": {
              "$ref": "#/definitions/Clip"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No clip was found"
          }
        },
        "x-developerInformation": "Returns the clipData fields and preview rendition URLs for a single clip. The fields parameter allows the return of a specific set of clipData fields.",
        "x-requiredPermissions": "Root"
      }
    },
    "/v1/clip/child": {
      "post": {
        "tags": [
          "Clip"
        ],
        "summary": "Create a child clip from an existing clip.",
        "description": "<strong>Required Permissions</strong>: CreateChildClips\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "createChildClip",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "siteName",
            "in": "query",
            "description": "Name of site where parent asset is located",
            "required": false,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "query",
            "description": "Id of collection to add child clip to",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ChildClipRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Child clip was created successfully",
            "schema": {
              "$ref": "#/definitions/Clip"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Parent clip not found"
          }
        },
        "x-requiredPermissions": "CreateChildClips"
      }
    },
    "/v1/clip/fieldDefinition": {
      "get": {
        "tags": [
          "Clip"
        ],
        "summary": "Retrieve the field definition for the specified field.",
        "description": "<strong>Required Permissions</strong>: ViewFieldDefinitions\n\n<strong>Developer Information</strong>: Returns the field definition for the specified field.\n\n",
        "operationId": "getAssetEditDetail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fieldName",
            "in": "query",
            "description": "Name of field to retrieve",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The field definition was found and returned",
            "schema": {
              "$ref": "#/definitions/AssetEditField"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No field was found"
          }
        },
        "x-developerInformation": "Returns the field definition for the specified field.",
        "x-requiredPermissions": "ViewFieldDefinitions"
      }
    },
    "/v1/clip/index/clipIds": {
      "put": {
        "tags": [
          "Clip"
        ],
        "summary": "Request manual indexing of assets by asset Ids",
        "description": "<strong>Required Permissions</strong>: IndexClips\n\n<strong>Developer Information</strong>: For each asset id that is submitted, all defined solr indexers will freshly index the metadata.\n\n",
        "operationId": "assetIndexing",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Comma separated list of ids to index",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Indexing initiated successfully.",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad request. Invalid parameters"
          },
          "401": {
            "description": "Not Logged In"
          },
          "500": {
            "description": "Unable to initiate index due to server errors"
          },
          "403": {
            "description": "Unauthorized"
          }
        },
        "x-developerInformation": "For each asset id that is submitted, all defined solr indexers will freshly index the metadata.",
        "x-requiredPermissions": "IndexClips"
      }
    },
    "/v1/clip/invalidateCache": {
      "put": {
        "tags": [
          "Clip"
        ],
        "summary": "Invalidate caches in the app.",
        "description": "<strong>Required Permissions</strong>: InvalidateCache\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "invalidateCache",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CacheInvalidateParams"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "x-requiredPermissions": "InvalidateCache"
      }
    },
    "/v1/clip/remove/clipIds": {
      "put": {
        "tags": [
          "Clip"
        ],
        "summary": "Remove clips from content owner's inventory",
        "description": "<strong>Required Permissions</strong>: RemoveClips\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "removeClipsFromContentOwner'sInventory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ClipIdsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Clips are found and removed from content owner successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad request. Invalid parameters"
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No clips were found"
          }
        },
        "x-requiredPermissions": "RemoveClips"
      }
    },
    "/v1/clip/share": {
      "post": {
        "tags": [
          "Clip"
        ],
        "summary": "Share assets with other users.",
        "description": "<strong>Required Permissions</strong>: CreateClipShare\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "assetShare",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssetShareInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The asset(s) was(were) shared"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No asset(s) was(were) found"
          }
        },
        "x-requiredPermissions": "CreateClipShare"
      }
    },
    "/v1/clip/watermark/image/{id}": {
      "put": {
        "tags": [
          "Clip"
        ],
        "summary": "Retrieve watermarked rendition of specified clip.",
        "description": "<strong>Required Permissions</strong>: CreateDynamicOverlay\n\n<strong>Developer Information</strong>: Returns a watermarked image if rendition type is marked as imageOverlaySource.\n\n",
        "operationId": "watermark",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "image/gif",
          "image/jpeg",
          "image/png"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Clip Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifications for watermarking",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The clip was found and returned",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No clip found marked imageOverlaySource"
          }
        },
        "x-developerInformation": "Returns a watermarked image if rendition type is marked as imageOverlaySource.",
        "x-requiredPermissions": "CreateDynamicOverlay"
      }
    },
    "/v1/clip/{id}": {
      "get": {
        "tags": [
          "Clip"
        ],
        "summary": "Retrieve clip metadata and renditions.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: Returns the clipData fields and preview rendition URLs for a single clip. The fields parameter allows the return of a specific set of clipData fields.\n\n",
        "operationId": "clipGet_get_v1_clip_by_id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Clip Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separted list of fields to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "query",
            "description": "Name of site where asset is located",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeFormat",
            "in": "query",
            "description": "Time Format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The clip was found and returned",
            "schema": {
              "$ref": "#/definitions/Clip"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No clip was found"
          }
        },
        "x-developerInformation": "Returns the clipData fields and preview rendition URLs for a single clip. The fields parameter allows the return of a specific set of clipData fields."
      },
      "put": {
        "tags": [
          "Clip"
        ],
        "summary": "Update an existing clip.",
        "description": "<strong>Required Permissions</strong>: EditClips\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "clipUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "siteName",
            "in": "query",
            "description": "Name of site where asset is being edited from",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Clip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Clip"
            }
          }
        },
        "x-requiredPermissions": "EditClips"
      }
    },
    "/v1/clip/{id}/clipDetail": {
      "get": {
        "tags": [
          "Clip"
        ],
        "summary": "Retrieve clip metadata based on configuration.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: Returns the clipData fields and preview rendition URLs for a single clip. The asset detail and rendition type configuration define which clipData and rendition values are returned.\n\n",
        "operationId": "clipGetDetail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Clip id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "timeFormat",
            "in": "query",
            "description": "Time Format",
            "required": false,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "query",
            "description": "Name of site where asset is located",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The clip detail was found and returned",
            "schema": {
              "$ref": "#/definitions/AssetDetail"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No clip was found"
          }
        },
        "x-developerInformation": "Returns the clipData fields and preview rendition URLs for a single clip. The asset detail and rendition type configuration define which clipData and rendition values are returned."
      }
    },
    "/v1/clip/{id}/clipEdit": {
      "get": {
        "tags": [
          "Clip"
        ],
        "summary": "Retrieve editable clip fields based on configuration.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: Returns the clipData fields that can be edited for a single clip.\n\n",
        "operationId": "clipGetEdit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Clip id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "siteName",
            "in": "query",
            "description": "Name of site where asset is located",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The clip edit information was found and returned",
            "schema": {
              "$ref": "#/definitions/AssetEditDetail"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No clip was found"
          }
        },
        "x-developerInformation": "Returns the clipData fields that can be edited for a single clip."
      }
    },
    "/v1/clip/{id}/collectionEdit": {
      "get": {
        "tags": [
          "Clip"
        ],
        "summary": "Retrieve editable clip fields for a collection based on configuration.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: Returns the clipData fields that can be edited for clips in a collection.\n\n",
        "operationId": "clipCollectionEdit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Clip id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "siteName",
            "in": "query",
            "description": "Name of site where asset is located",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The clip edit information was found and returned",
            "schema": {
              "$ref": "#/definitions/AssetEditDetail"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No clip was found"
          }
        },
        "x-developerInformation": "Returns the clipData fields that can be edited for clips in a collection."
      },
      "put": {
        "tags": [
          "Clip"
        ],
        "summary": "Update existing clips in a collection",
        "description": "<strong>Required Permissions</strong>: EditClips\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "collectionUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "siteName",
            "in": "query",
            "description": "Name of site where collection is being edited from",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Clip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CollectionMetadataUpdateResponse"
            }
          }
        },
        "x-requiredPermissions": "EditClips"
      }
    },
    "/v1/clip/{id}/deliveryMetadata/{deliveryMetadataId}": {
      "get": {
        "tags": [
          "Clip"
        ],
        "summary": "Retrieve a clip delivery metadata.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: Returns the updateMetadata object that reflects the combination of the config and the clip metadata.\n\n",
        "operationId": "clipDeliveryMetadataGet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Clip Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deliveryMetadataId",
            "in": "path",
            "description": "DeliveryMetadata Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The clip was found and returned the updateMetadata object",
            "schema": {
              "$ref": "#/definitions/UpdateMetadataObj"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No clip was found or no deliveryMetadata was found"
          }
        },
        "x-developerInformation": "Returns the updateMetadata object that reflects the combination of the config and the clip metadata."
      }
    },
    "/v1/clip/{id}/rendition": {
      "put": {
        "tags": [
          "Clip"
        ],
        "summary": "Create a rendition for a clip",
        "description": "<strong>Required Permissions</strong>: EditClipRendition\n\n<strong>Developer Information</strong>: The request must contain valid size and purpose.\n\n<strong>IMPORTANT:</strong>The valid size are: full, xlarge, large, medium, small.\nThe valid purpose are: comp, preview, thumbnail, housemaster.\n\n<strong>Example</strong>: {<br />\"purpose\": \"preview\",<br /> \"size\": \"medium\",<br /> \"variant\": \"xyz\"<br />}",
        "operationId": "createRenditionForClip",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Clip Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateRenditionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "rendition was created successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad request. Invalid parameters"
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No clips were found"
          }
        },
        "x-developerInformation": "The request must contain valid size and purpose.\n\n<strong>IMPORTANT:</strong>The valid size are: full, xlarge, large, medium, small.\nThe valid purpose are: comp, preview, thumbnail, housemaster.",
        "x-example": "{'purpose': 'preview', 'size': 'medium', 'variant': 'xyz'}",
        "x-requiredPermissions": "EditClipRendition"
      }
    },
    "/v1/clip/{id}/rendition/{renditionId}": {
      "delete": {
        "tags": [
          "Clip"
        ],
        "summary": "Delete a rendition for a clip",
        "description": "<strong>Required Permissions</strong>: DeleteClipRendition\n\n<strong>Developer Information</strong>: The request delete the rendition from the rendition table in the database and/or delete the rendition file from S3 bucket.\n\n<strong>Example</strong>: deleteFile is false then delete the rendition from the rendition table in the database only,<br /> keep the rendition file.",
        "operationId": "deleteRenditionForClip",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Clip Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "renditionId",
            "in": "path",
            "description": "Rendition Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleteFile",
            "in": "query",
            "description": "Delete the rendition file from the S4 bucket.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "The rendition was deleted successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad request. Invalid parameters"
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No clip or rendition were found"
          }
        },
        "x-developerInformation": "The request delete the rendition from the rendition table in the database and/or delete the rendition file from S3 bucket.",
        "x-example": "deleteFile is false then delete the rendition from the rendition table in the database only, keep the rendition file.",
        "x-requiredPermissions": "DeleteClipRendition"
      }
    },
    "/v1/clip/{id}/renditionInstall": {
      "post": {
        "tags": [
          "Clip"
        ],
        "summary": "Create a rendition for a clip",
        "description": "<strong>Required Permissions</strong>: CreateClipRendition\n\n<strong>Developer Information</strong>: The request must contain valid size, purpose and uri.\n\n<strong>IMPORTANT:</strong>The valid size are: full, xlarge, large, medium, small.\nThe valid purpose are: comp, preview, thumbnail, housemaster.\nThe uri cannot be null.\n\n<strong>Example</strong>: {<br />\"purpose\": \"preview\",<br /> \"size\": \"medium\",<br /> \"variant\": \"xyz\",<br /> \"uri\": \"uri\"<br />}",
        "operationId": "createRenditionForClipByCore",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Clip Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateRenditionByCore"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "rendition was created successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad request. Invalid parameters"
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No clips were found"
          }
        },
        "x-developerInformation": "The request must contain valid size, purpose and uri.\n\n<strong>IMPORTANT:</strong>The valid size are: full, xlarge, large, medium, small.\nThe valid purpose are: comp, preview, thumbnail, housemaster.\nThe uri cannot be null.",
        "x-example": "{'purpose': 'preview', 'size': 'medium', 'variant': 'xyz', 'uri': 'uri'}",
        "x-requiredPermissions": "CreateClipRendition"
      }
    },
    "/v1/clip/{id}/share/deliveryOptions": {
      "get": {
        "tags": [
          "Clip"
        ],
        "summary": "Retrieve clip delivery options.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: Returns the appropriate share delivery options for a clip.\n\n",
        "operationId": "clipGetDeliveryOptions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Clip Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The delivery option(s) was found and returned",
            "schema": {
              "$ref": "#/definitions/ApiList"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No clip was found"
          }
        },
        "x-developerInformation": "Returns the appropriate share delivery options for a clip."
      }
    },
    "/v1/clip/{id}/{parent}/{parentId}/clipDetail": {
      "get": {
        "tags": [
          "Clip"
        ],
        "summary": "Retrieve clip metadata based on access privilege of parent entity of asset.",
        "description": "<strong>Required Permissions</strong>: ViewClips\n\n<strong>Developer Information</strong>: Returns the clipData fields and preview rendition URLs for a single clip that belongs to the specified parent entity (collection/quote/order). The asset detail and rendition type configuration define which clipData and rendition values are returned.\n\n",
        "operationId": "clipInCollectionDetail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Clip id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "parent",
            "in": "path",
            "description": "Parent entity type",
            "required": true,
            "type": "string",
            "pattern": "collection|quote|order|package"
          },
          {
            "name": "parentId",
            "in": "path",
            "description": "Parent entity Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "timeFormat",
            "in": "query",
            "description": "Time Format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The clip detail was found and returned",
            "schema": {
              "$ref": "#/definitions/AssetDetail"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No clip was found"
          },
          "417": {
            "description": "Clip not part of specified parent entity"
          }
        },
        "x-developerInformation": "Returns the clipData fields and preview rendition URLs for a single clip that belongs to the specified parent entity (collection/quote/order). The asset detail and rendition type configuration define which clipData and rendition values are returned.",
        "x-requiredPermissions": "ViewClips"
      }
    },
    "/v1/collectionSummary": {
      "post": {
        "tags": [
          "Collection Summary"
        ],
        "summary": "Create a collection summary.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "createCollectionSummary",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Collection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The collection summary was found and returned",
            "schema": {
              "$ref": "#/definitions/CollectionSummary"
            }
          },
          "400": {
            "description": "No collection summary was found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/collectionSummary/assets/{id}": {
      "get": {
        "tags": [
          "Collection Summary"
        ],
        "summary": "Retrieve asset summaries for a collection.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "assetSolrCloudSearchCollection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortId",
            "in": "query",
            "description": "Sort id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "i",
            "in": "query",
            "description": "Page index",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "n",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          },
          {
            "name": "afn",
            "in": "query",
            "description": "Optional. Asset Fields Name config string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeFormat",
            "in": "query",
            "description": "Optional. Time Format for timeStart and timeEnd. Support streamTimecode, sourceTimecode, milliseconds and sourceMilliseconds",
            "required": false,
            "type": "string",
            "default": "milliseconds"
          }
        ],
        "responses": {
          "200": {
            "description": "The clips were found and returned",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          },
          "400": {
            "description": "No assets were found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "417": {
            "description": "Collection owner could not be retrieved"
          }
        }
      }
    },
    "/v1/collectionSummary/fetchBy": {
      "get": {
        "tags": [
          "Collection Summary"
        ],
        "summary": "Retrieve collection summaries for a user by access level.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "collectionSummaryByAccessLevel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accessLevel",
            "in": "query",
            "description": "Access level",
            "required": true,
            "type": "string"
          },
          {
            "name": "includePublic",
            "in": "query",
            "description": "Include public shares",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "s",
            "in": "query",
            "description": "Sort by",
            "required": false,
            "type": "string",
            "default": "lastUpdated"
          },
          {
            "name": "d",
            "in": "query",
            "description": "Sort descending",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "i",
            "in": "query",
            "description": "Page index",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "n",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection summaries were found and returned",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          },
          "400": {
            "description": "No collection summaries were found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/collectionSummary/metadata/{id}": {
      "get": {
        "tags": [
          "Collection Summary"
        ],
        "summary": "Retrieve a collection metadata summary.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getCollectionMetadataSummary",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection summary was found and returned",
            "schema": {
              "$ref": "#/definitions/CollectionMetadataSummary"
            }
          },
          "400": {
            "description": "No collection summary was found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/collectionSummary/search": {
      "get": {
        "tags": [
          "Collection Summary"
        ],
        "summary": "Retrieve collection summaries for a user by access level.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "collectionSummarySearch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Query string",
            "required": false,
            "type": "string"
          },
          {
            "name": "accessLevel",
            "in": "query",
            "description": "Access level",
            "required": true,
            "type": "string"
          },
          {
            "name": "includePublic",
            "in": "query",
            "description": "Include public shares",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "s",
            "in": "query",
            "description": "Sort by",
            "required": false,
            "type": "string",
            "default": "lastUpdated"
          },
          {
            "name": "d",
            "in": "query",
            "description": "Sort descending",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "i",
            "in": "query",
            "description": "Page index",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "n",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection summaries were found and returned",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          },
          "400": {
            "description": "No collection summaries were found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/collectionSummary/setFocused/{id}": {
      "put": {
        "tags": [
          "Collection Summary"
        ],
        "summary": "Set the focused collection and receive the corresponding collection summary.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "setFocusedCollection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The focused collection was set and the collection summary was returned",
            "schema": {
              "$ref": "#/definitions/CollectionSummary"
            }
          },
          "400": {
            "description": "No focused collection was found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/collectionSummary/{id}": {
      "get": {
        "tags": [
          "Collection Summary"
        ],
        "summary": "Retrieve a collection summary.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getCollectionSummary",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection summary was found and returned",
            "schema": {
              "$ref": "#/definitions/CollectionSummary"
            }
          },
          "400": {
            "description": "No collection summary was found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Collection Summary"
        ],
        "summary": "Update a collection and return its summary. The request should include the full collection object. The response will be a collection summary based on the modified collection.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "updateCollectionSummary",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The full collection that is to be updated. Note that this is not the collection summary object.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Collection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The collection summary was found and returned",
            "schema": {
              "$ref": "#/definitions/CollectionSummary"
            }
          },
          "400": {
            "description": "No collection summary was found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/filter/anonymous/filterTree": {
      "get": {
        "tags": [
          "Filter"
        ],
        "summary": "Retrieve the filter tree for the site.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getFilterTree",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "siteName",
            "in": "query",
            "description": "The site name that we're retrieving the filter tree",
            "required": false,
            "type": "string"
          },
          {
            "name": "counted",
            "in": "query",
            "description": "Whether or not to get the count for the filter tree",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "The current query text",
            "required": false,
            "type": "string",
            "default": "*"
          },
          {
            "name": "filterIds",
            "in": "query",
            "description": "Active filter ids, comma separated",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValues",
            "in": "query",
            "description": "Filter values. Comma separated. Must follow format filterId:value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FilterTree"
            }
          }
        }
      }
    },
    "/v1/filter/anonymous/filterTree/{assetId}/{configId}": {
      "get": {
        "tags": [
          "Filter"
        ],
        "summary": "Retrieve the filter tree values for related assets search.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: Returns available filter tree values and counts for related assets search. The filter tree objects are defined via configuration.\n\n",
        "operationId": "getFilterTreeForRelatedAssets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "siteName",
            "in": "query",
            "description": "The site name that we're retrieving the filter tree",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetId",
            "in": "path",
            "description": "Asset Id to find related assets for",
            "required": true,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "path",
            "description": "Related Query config Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "counted",
            "in": "query",
            "description": "Whether or not to get the count for the filter tree",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "The current query text",
            "required": false,
            "type": "string",
            "default": "*"
          },
          {
            "name": "filterIds",
            "in": "query",
            "description": "Active filter ids, comma separated",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValues",
            "in": "query",
            "description": "Filter values. Comma separated. Must follow format filterId:value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FilterTree"
            }
          }
        },
        "x-developerInformation": "Returns available filter tree values and counts for related assets search. The filter tree objects are defined via configuration."
      }
    },
    "/v1/filter/filterTree": {
      "get": {
        "tags": [
          "Filter"
        ],
        "summary": "Retrieve the filter tree values.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: Returns available filter tree values and counts. The filter tree objects are defined via configuration.\n\n",
        "operationId": "getUserFilterTree",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "counted",
            "in": "query",
            "description": "Whether or not to get the count for the filter tree",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "The current query text",
            "required": false,
            "type": "string",
            "default": "*"
          },
          {
            "name": "filterIds",
            "in": "query",
            "description": "Active filter ids, comma separated",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValues",
            "in": "query",
            "description": "Filter values. Comma separated. Must follow format filterId:value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FilterTree"
            }
          }
        },
        "x-developerInformation": "Returns available filter tree values and counts. The filter tree objects are defined via configuration."
      }
    },
    "/v1/filter/filterTree/{assetId}/{configId}": {
      "get": {
        "tags": [
          "Filter"
        ],
        "summary": "Retrieve the filter tree values for related assets search.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: Returns available filter tree values and counts for related assets search. The filter tree objects are defined via configuration.\n\n",
        "operationId": "getUserFilterTreeForRelatedAssets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "Asset Id to find related assets for",
            "required": true,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "path",
            "description": "Related Query config Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "counted",
            "in": "query",
            "description": "Whether or not to get the count for the filter tree",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "The current query text",
            "required": false,
            "type": "string",
            "default": "*"
          },
          {
            "name": "filterIds",
            "in": "query",
            "description": "Active filter ids, comma separated",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValues",
            "in": "query",
            "description": "Filter values. Comma separated. Must follow format filterId:value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FilterTree"
            }
          }
        },
        "x-developerInformation": "Returns available filter tree values and counts for related assets search. The filter tree objects are defined via configuration."
      }
    },
    "/v1/filter/filterTree/{id}": {
      "get": {
        "tags": [
          "Filter"
        ],
        "summary": "Retrieve the filter tree values for a specified root filter.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: Returns available filter tree values and counts. The filter tree objects are defined via configuration.\n\n",
        "operationId": "getUserFilterTreeById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Root filter id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "counted",
            "in": "query",
            "description": "Whether or not to get the count for the filter tree",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "The current query text",
            "required": false,
            "type": "string",
            "default": "*"
          },
          {
            "name": "filterIds",
            "in": "query",
            "description": "Active filter ids, comma separated",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValues",
            "in": "query",
            "description": "Filter values. Comma separated. Must follow format filterId:value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FilterTree"
            }
          }
        },
        "x-developerInformation": "Returns available filter tree values and counts. The filter tree objects are defined via configuration."
      }
    },
    "/v1/galleryResult": {
      "get": {
        "tags": [
          "Gallery Search Result"
        ],
        "summary": "Retrieve a GalleryResult.",
        "description": "<strong>Required Permissions</strong>: ViewGalleryResults\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "galleryResultGet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Value for config query string",
            "required": false,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "GalleryResult was found and returned",
            "schema": {
              "$ref": "#/definitions/GalleryResult"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No GalleryResult was found"
          }
        },
        "x-requiredPermissions": "ViewGalleryResults"
      }
    },
    "/v1/renditionType/asperaSpec/{assetId}": {
      "get": {
        "tags": [
          "Rendition Types"
        ],
        "summary": "Retrieve the asperaSpec for a rendition type.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: The asperaSpec can be used to initiate an accelerated rendition transfer. Aspera availability may vary by rendition type.\n\n",
        "operationId": "getCompAsperaSpec",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "browserType",
            "in": "query",
            "description": "The browser type. Supported types are Any, Chrome, Edge, Safari, and Firefox.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "The rendition type for which the download URL is needed. Supported types are wm, clean, or full.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The clips were found and returned",
            "schema": {
              "$ref": "#/definitions/RenditionUrl"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No asset or rendition type configuration was found"
          }
        },
        "x-developerInformation": "The asperaSpec can be used to initiate an accelerated rendition transfer. Aspera availability may vary by rendition type."
      }
    },
    "/v1/renditionType/availableRenditions/{assetId}": {
      "get": {
        "tags": [
          "Rendition Types"
        ],
        "summary": "Retrieve a map of available renditions for a clip.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: The response will include temporary URLs to the available renditions. Availability is determined by CORE workflow rules.\n\n",
        "operationId": "availableRenditions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "isMobile",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "browserType",
            "in": "query",
            "description": "The browser type. Supported types are Any, Chrome, Edge, Safari, and Firefox.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The rendition use types were found and returned",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No asset or rendition type configuration was found"
          }
        },
        "x-developerInformation": "The response will include temporary URLs to the available renditions. Availability is determined by CORE workflow rules."
      }
    },
    "/v1/renditionType/cartDeliveryOptions": {
      "get": {
        "tags": [
          "Rendition Types"
        ],
        "summary": "Retrieve the url to download comp.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getCartAssetDeliveryOptions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "assets",
            "in": "query",
            "description": "Comma Separated list of assets to retrieve",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The clips were found and returned",
            "schema": {
              "$ref": "#/definitions/RenditionUrl"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No asset or rendition type configuration was found"
          }
        }
      }
    },
    "/v1/renditionType/clipDetail/{assetId}": {
      "get": {
        "tags": [
          "Rendition Types"
        ],
        "summary": "Retrieve the URL used to render a rendition. The siteName query parameter is optional and only required for anonymous users.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: The response will include a URL that may be used to render the asset on screen.  For videos, it will be a URL that can be fed directly to JWPlayer.  For images/pdf, it will be a base64 data URL)\n\n",
        "operationId": "getClipDetail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "siteName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The clip was found and its rendition url returned",
            "schema": {
              "$ref": "#/definitions/RenditionUrl"
            }
          },
          "404": {
            "description": "No asset or rendition type configuration was found"
          },
          "406": {
            "description": "Anonymous user request without siteName query parameter"
          }
        },
        "x-developerInformation": "The response will include a URL that may be used to render the asset on screen.  For videos, it will be a URL that can be fed directly to JWPlayer.  For images/pdf, it will be a base64 data URL)"
      }
    },
    "/v1/renditionType/clipDetail/{assetId}/{parent}/{parentId}": {
      "get": {
        "tags": [
          "Rendition Types"
        ],
        "summary": "Retrieve clip metadata based on access privilege of parent entity of asset.",
        "description": "<strong>Required Permissions</strong>: ViewClips\n\n<strong>Developer Information</strong>: Returns the clipData fields and preview rendition URLs for a single clip that belongs to the specified parent entity (collection/quote/order). The asset detail and rendition type configuration define which clipData and rendition values are returned.\n\n",
        "operationId": "clipInCollectionDetail_get_v1_renditionType_clipDetail_by_assetId_by_parent_by_parentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "Clip id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "parent",
            "in": "path",
            "description": "Parent entity type",
            "required": true,
            "type": "string",
            "pattern": "collection|quote|order"
          },
          {
            "name": "parentId",
            "in": "path",
            "description": "Parent entity Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The clip detail was found and returned",
            "schema": {
              "$ref": "#/definitions/AssetDetail"
            }
          },
          "401": {
            "description": "Not Logged In"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No clip was found"
          },
          "417": {
            "description": "Clip not part of specified parent entity"
          }
        },
        "x-developerInformation": "Returns the clipData fields and preview rendition URLs for a single clip that belongs to the specified parent entity (collection/quote/order). The asset detail and rendition type configuration define which clipData and rendition values are returned.",
        "x-requiredPermissions": "ViewClips"
      }
    },
    "/v1/renditionType/deliveryOptions/eligibleAssets": {
      "get": {
        "tags": [
          "Rendition Types"
        ],
        "summary": "return asset ids that are valid for the specified delivery option",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getEligibleAssetsForDeliveryOption",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deliveryOptionId",
            "in": "query",
            "description": "delivery option id",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "query",
            "description": "Comma Separated list of asset IDs to validate against a delivery option id",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved eligible asset IDs"
          },
          "412": {
            "description": "Request exceeds 100 asset IDs limit"
          },
          "403": {
            "description": "You do not have access to the specified delivery option"
          }
        }
      }
    },
    "/v1/renditionType/deliveryOptions/{assetId}": {
      "get": {
        "tags": [
          "Rendition Types"
        ],
        "summary": "Retrieve the url to download comp.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getAssetDeliveryOptions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "browserType",
            "in": "query",
            "description": "Browser types: Any, Chrome, Edge, Safari, Firefox, Opera, IE ",
            "required": false,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The clips were found and returned",
            "schema": {
              "$ref": "#/definitions/ApiList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No asset or rendition type configuration was found"
          }
        }
      }
    },
    "/v1/renditionType/deliveryOptions/{assetId}/{parent}/{parentId}": {
      "get": {
        "tags": [
          "Rendition Types"
        ],
        "summary": "Retrieve the url to download comp based on access to specified parent entity.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getAssetDeliveryOptionsByParent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "browserType",
            "in": "query",
            "description": "Browser types: Any, Chrome, Edge, Safari, Firefox, Opera, IE ",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "path",
            "description": "Parent entity type",
            "required": true,
            "type": "string",
            "pattern": "collection|quote"
          },
          {
            "name": "parentId",
            "in": "path",
            "description": "Parent entity Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The clips were found and returned",
            "schema": {
              "$ref": "#/definitions/ApiList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No asset or rendition type configuration was found"
          },
          "406": {
            "description": "Invalid parent object type specified"
          }
        }
      }
    },
    "/v1/renditionType/downloadUrl/{assetId}": {
      "get": {
        "tags": [
          "Rendition Types"
        ],
        "summary": "Retrieve a download URL for a rendition type.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: The response will include temporary URLs to the available renditions. Download availability may vary by rendition type.\n\n",
        "operationId": "getCompDownloadUrl",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "browserType",
            "in": "query",
            "description": "The browser type. Supported types are Any, Chrome, Edge, Safari, and Firefox.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "The rendition type for which the download URL is needed. Supported types are wm, clean, or full.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The clips were found and returned",
            "schema": {
              "$ref": "#/definitions/RenditionUrl"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No asset or rendition type configuration was found"
          }
        },
        "x-developerInformation": "The response will include temporary URLs to the available renditions. Download availability may vary by rendition type."
      }
    },
    "/v1/renditionType/myDeliveryOptions": {
      "get": {
        "tags": [
          "Rendition Types"
        ],
        "summary": "Retrieve delivery options for the current user",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getDeliveryOptionsForCurrentUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transferType",
            "in": "query",
            "description": "an optional transferType parameter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Your delivery options were found and returned",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No delivery options were found"
          }
        }
      }
    },
    "/v1/renditionType/order/specs/{orderId}": {
      "get": {
        "tags": [
          "Rendition Types"
        ],
        "summary": "Retrieve the url to download the lineItem transcodes for order.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getLineItemSpecListForOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The clips were found and returned",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No asset or rendition type configuration was found"
          }
        }
      }
    },
    "/v1/renditionType/order/{orderId}": {
      "get": {
        "tags": [
          "Rendition Types"
        ],
        "summary": "Retrieve the url to download the lineItem transcodes for order.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getLineItemUrlsForOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The clips were found and returned",
            "schema": {
              "$ref": "#/definitions/RenditionUrl"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No asset or rendition type configuration was found"
          }
        }
      }
    },
    "/v1/renditionType/order/{orderId}/lineItem/{lineItemId}": {
      "get": {
        "tags": [
          "Rendition Types"
        ],
        "summary": "Retrieve the url to download the lineItem transcode.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getLineItemUrl",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "lineItemId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The clips were found and returned",
            "schema": {
              "$ref": "#/definitions/RenditionUrl"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No asset or rendition type configuration was found"
          }
        }
      }
    },
    "/v1/renditionType/{assetId}": {
      "get": {
        "tags": [
          "Rendition Types"
        ],
        "summary": "Retrieve a single rendition URL for a particular use type.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: The response will include a temporary URL to the available rendition. URL availability may vary by use type, and is based on the rendition type configuration.\n\n",
        "operationId": "findRendition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "useType",
            "in": "query",
            "description": "The use type for which the URL is needed. Supported types are thumbnail, clipThumbnail, clipQuickPreview, clipPreview, imagePreview, imageCompDownload, cleanClipCompDownload, and cleanImageCompDownload.",
            "required": false,
            "type": "string"
          },
          {
            "name": "isMobile",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "browserType",
            "in": "query",
            "description": "The browser type. Supported types are Any, Chrome, Edge, Safari, and Firefox.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The rendition url was found and returned",
            "schema": {
              "$ref": "#/definitions/RenditionUrl"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No asset or rendition type configuration was found"
          }
        },
        "x-developerInformation": "The response will include a temporary URL to the available rendition. URL availability may vary by use type, and is based on the rendition type configuration."
      }
    },
    "/v1/renditionType/{assetId}/quote/{quoteId}": {
      "get": {
        "tags": [
          "Rendition Types"
        ],
        "summary": "Retrieve a single rendition URL for a particular use type.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: The response will include a temporary URL to the available rendition. URL availability may vary by use type, and is based on the rendition type configuration.\n\n",
        "operationId": "findRendition_get_v1_renditionType_by_assetId_quote_by_quoteId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "useType",
            "in": "query",
            "description": "The use type for which the URL is needed. Supported types are thumbnail, clipThumbnail, clipQuickPreview, clipPreview, imagePreview, imageCompDownload, cleanClipCompDownload, and cleanImageCompDownload.",
            "required": false,
            "type": "string"
          },
          {
            "name": "isMobile",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "browserType",
            "in": "query",
            "description": "The browser type. Supported types are Any, Chrome, Edge, Safari, and Firefox.",
            "required": false,
            "type": "string"
          },
          {
            "name": "quoteId",
            "in": "path",
            "description": "Quote Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The rendition url was found and returned",
            "schema": {
              "$ref": "#/definitions/RenditionUrl"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No asset or rendition type configuration was found"
          }
        },
        "x-developerInformation": "The response will include a temporary URL to the available rendition. URL availability may vary by use type, and is based on the rendition type configuration."
      }
    },
    "/v1/renditionUrl/select/{assetId}": {
      "get": {
        "tags": [
          "Rendition URL"
        ],
        "summary": "Get a rendition with the converted external urls for an asset that matches the selection criteria specified by query parameters.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getRendition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "Asset Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "scheme",
            "in": "query",
            "description": "Possible values:[http,https,file,rtmpe]. https if none is specified",
            "required": false,
            "type": "string",
            "default": "https"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Possible values:[browser,download,FlashPreview,Html5Preview]. browser if none is specified",
            "required": false,
            "type": "string",
            "default": "browser"
          },
          {
            "name": "formats",
            "in": "query",
            "description": "Comma separated list of rendition formats",
            "required": false,
            "type": "string"
          },
          {
            "name": "sizes",
            "in": "query",
            "description": "Comma separated list of rendition sizes",
            "required": false,
            "type": "string"
          },
          {
            "name": "purposes",
            "in": "query",
            "description": "Comma separated list of rendition purposes",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The rendition was found",
            "schema": {
              "$ref": "#/definitions/RenditionInfo"
            }
          },
          "400": {
            "description": "No renditions were found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/renditionUrl/{assetId}": {
      "get": {
        "tags": [
          "Rendition URL"
        ],
        "summary": "Get all renditions including the converted external urls for an asset.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "getRenditions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "Asset Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "scheme",
            "in": "query",
            "description": "Possible values:[http,https,file,rtmpe]. https if none is specified",
            "required": false,
            "type": "string",
            "default": "https"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Possible values:[browser,download,FlashPreview,Html5Preview]. browser if none is specified",
            "required": false,
            "type": "string",
            "default": "browser"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of renditions with external urls was returned",
            "schema": {
              "$ref": "#/definitions/RenditionInfoList"
            }
          },
          "400": {
            "description": "No renditions were found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/search": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Asset search.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: <ul><li>All filter ids are dependent on what site the search is being performed on.</li><li>If left blank, the default value for sortId is 0.</li><li>filterIds and filterValues are OPTIONAL fields. However, if you list one or more filterIds — AND the filterId requires a value — they must be accompanied by the appropriatevalues in the filterValues field.</li><li><strong>Filter Example 1:</strong> (Warning: filterId numbers will vary based on your site.) If you enter '1517' as a filterId, the filterValue field should include the filterId and a date or date range ('1517:11/28/2016 - 11/29/2016'). In this case, if no timestamp is included, the results will include all clips from that date, regardless of time.To include a timestamp, use the following format: '1998-03-04 23:59:59'.</li><li><strong>Filter Example 2:</strong> (Warning: filterId numbers will vary based on your site.) To use multiple filterIds use a comma-separated list for both filterIds and filterValues. If you enter '123,456,789' into the filterId field,you should enter '123:1080i,456:archive,789:\"Rights Managed\"' into the filterValue field.</li></ul>\n\n",
        "operationId": "assetSolrCloudSearch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Query string. If left blank, it will return all clips.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortId",
            "in": "query",
            "description": "Sort id. If left blank, it will sort based on the configured default.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "i",
            "in": "query",
            "description": "Page index number. Initial page is 0.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "n",
            "in": "query",
            "description": "Number of results per page. The maximum number is 200.",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          },
          {
            "name": "filterIds",
            "in": "query",
            "description": "Comma separated list of filter ids to be applied to the query, regardless of whether those filters require values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValues",
            "in": "query",
            "description": "Comma separated pairs of filter ids and filter values. To be used when a filter id requires a value. Format is filterId:value, filterId:value.",
            "required": false,
            "type": "string"
          },
          {
            "name": "gq",
            "in": "query",
            "description": "Gallery query string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "afn",
            "in": "query",
            "description": "Asset Fields Name config string.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Clips were found and returned",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          },
          "400": {
            "description": "No Assets were found due to bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-developerInformation": "<ul><li>All filter ids are dependent on what site the search is being performed on.</li><li>If left blank, the default value for sortId is 0.</li><li>filterIds and filterValues are OPTIONAL fields. However, if you list one or more filterIds — AND the filterId requires a value — they must be accompanied by the appropriatevalues in the filterValues field.</li><li><strong>Filter Example 1:</strong> (Warning: filterId numbers will vary based on your site.) If you enter '1517' as a filterId, the filterValue field should include the filterId and a date or date range ('1517:11/28/2016 - 11/29/2016'). In this case, if no timestamp is included, the results will include all clips from that date, regardless of time.To include a timestamp, use the following format: '1998-03-04 23:59:59'.</li><li><strong>Filter Example 2:</strong> (Warning: filterId numbers will vary based on your site.) To use multiple filterIds use a comma-separated list for both filterIds and filterValues. If you enter '123,456,789' into the filterId field,you should enter '123:1080i,456:archive,789:\"Rights Managed\"' into the filterValue field.</li></ul>"
      }
    },
    "/v1/search/accessCheck": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Check access to assets by id for a logged in user.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "assetAccessCheck",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "assets",
            "in": "query",
            "description": "Comma Separated list of assets to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiListLong"
            }
          }
        }
      }
    },
    "/v1/search/accessCheckForUser": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Check access to assets by id for a supplied userName.",
        "description": "<strong>Required Permissions</strong>: Root\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "assetAccessCheckForUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "assets",
            "in": "query",
            "description": "Comma Separated list of assets to retrieve",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiListLong"
            }
          }
        },
        "x-requiredPermissions": "Root"
      }
    },
    "/v1/search/accessCheckForUser/{id}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Check access to assets by id for a supplied userName.",
        "description": "<strong>Required Permissions</strong>: Root\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "assetAccessCheckForUser_get_v1_search_accessCheckForUser_by_id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "assets",
            "in": "query",
            "description": "Comma Separated list of assets to retrieve",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiListLong"
            }
          }
        },
        "x-requiredPermissions": "Root"
      }
    },
    "/v1/search/accessPricingCheck": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Check access to assets for pricing by id for a logged in user.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "assetAccessPricingCheck",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "siteName",
            "in": "query",
            "description": "Site where assets are located",
            "required": false,
            "type": "string"
          },
          {
            "name": "assets",
            "in": "query",
            "description": "Comma Separated list of assets to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiListLong"
            }
          }
        }
      }
    },
    "/v1/search/advancedSearch": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Advanced Search Request. Please see the structure of the request. The following operations are supported: [In, Contains, Is, GreaterThan, LessThan, IsNot, NotIn, NotContains].",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "advancedSearchRequest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AdvancedSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Clips were found and returned",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          },
          "400": {
            "description": "No Assets were found due to bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/search/aiware": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Asset search.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: <ul><li>All filter ids are dependent on what site the search is being performed on.</li><li>If left blank, the default value for sortId is 0.</li><li>filterIds and filterValues are OPTIONAL fields. However, if you list one or more filterIds — AND the filterId requires a value — they must be accompanied by the appropriatevalues in the filterValues field.</li><li><strong>Filter Example 1:</strong> (Warning: filterId numbers will vary based on your site.) If you enter '1517' as a filterId, the filterValue field should include the filterId and a date or date range ('1517:11/28/2016 - 11/29/2016'). In this case, if no timestamp is included, the results will include all clips from that date, regardless of time.To include a timestamp, use the following format: '1998-03-04 23:59:59'.</li><li><strong>Filter Example 2:</strong> (Warning: filterId numbers will vary based on your site.) To use multiple filterIds use a comma-separated list for both filterIds and filterValues. If you enter '123,456,789' into the filterId field,you should enter '123:1080i,456:archive,789:\"Rights Managed\"' into the filterValue field.</li></ul>\n\n",
        "operationId": "assetAiwareSearch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Query string. If left blank, it will return all clips.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortId",
            "in": "query",
            "description": "Sort id. If left blank, it will sort based on the configured default.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "i",
            "in": "query",
            "description": "Page index number. Initial page is 0.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "n",
            "in": "query",
            "description": "Number of results per page. The maximum number is 200.",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          },
          {
            "name": "filterIds",
            "in": "query",
            "description": "Comma separated list of filter ids to be applied to the query, regardless of whether those filters require values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValues",
            "in": "query",
            "description": "Comma separated pairs of filter ids and filter values. To be used when a filter id requires a value. Format is filterId:value, filterId:value.",
            "required": false,
            "type": "string"
          },
          {
            "name": "gq",
            "in": "query",
            "description": "Gallery query string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "afn",
            "in": "query",
            "description": "Asset Fields Name config string.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Clips were found and returned",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          },
          "400": {
            "description": "No Assets were found due to bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-developerInformation": "<ul><li>All filter ids are dependent on what site the search is being performed on.</li><li>If left blank, the default value for sortId is 0.</li><li>filterIds and filterValues are OPTIONAL fields. However, if you list one or more filterIds — AND the filterId requires a value — they must be accompanied by the appropriatevalues in the filterValues field.</li><li><strong>Filter Example 1:</strong> (Warning: filterId numbers will vary based on your site.) If you enter '1517' as a filterId, the filterValue field should include the filterId and a date or date range ('1517:11/28/2016 - 11/29/2016'). In this case, if no timestamp is included, the results will include all clips from that date, regardless of time.To include a timestamp, use the following format: '1998-03-04 23:59:59'.</li><li><strong>Filter Example 2:</strong> (Warning: filterId numbers will vary based on your site.) To use multiple filterIds use a comma-separated list for both filterIds and filterValues. If you enter '123,456,789' into the filterId field,you should enter '123:1080i,456:archive,789:\"Rights Managed\"' into the filterValue field.</li></ul>"
      }
    },
    "/v1/search/aiware/entities": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Retrieve entities from aiware for the logged in user.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "findEntities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "siteName",
            "in": "query",
            "description": "Site where assets are located",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityIds",
            "in": "query",
            "description": "Comma separated list of entity ids to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiListAiwareTypeAheadTerm"
            }
          }
        }
      }
    },
    "/v1/search/aiwareTypeAheadTerms": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Get the list of the aiware terms with document count that match the prefix text.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "aiwareTypeAheadTerms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "siteName",
            "in": "query",
            "description": "Site where assets are located",
            "required": true,
            "type": "string"
          },
          {
            "name": "cognitionType",
            "in": "query",
            "description": "Cognition type to retrieve terms for",
            "required": false,
            "type": "string",
            "default": "all",
            "enum": [
              "all",
              "face",
              "logo",
              "object"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The prefix text to retrieve matched search terms for",
            "required": true,
            "type": "string"
          },
          {
            "name": "maxTerms",
            "in": "query",
            "description": "Maximum number of terms to retrieve",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "prefix",
            "in": "query",
            "description": "True means search terms that start with text. False means terms that contains this text within it.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiListAiwareTypeAheadTerm"
            }
          }
        }
      }
    },
    "/v1/search/anonymous": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Anonymous asset search.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "assetSolrCloudAnonSearch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "siteName",
            "in": "query",
            "description": "Site where assets are located",
            "required": true,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "Keyword in an asset's name (ex:lighthouses)",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortId",
            "in": "query",
            "description": "Sort id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "i",
            "in": "query",
            "description": "Page index",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "n",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          },
          {
            "name": "filterIds",
            "in": "query",
            "description": "Optional comma separated list of filter Ids",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValues",
            "in": "query",
            "description": "Optional comma separated list of filter values. The filter value must follow the format: filterId:value text. For example: 12345:02/03/2016",
            "required": false,
            "type": "string"
          },
          {
            "name": "gq",
            "in": "query",
            "description": "Optional. Gallery query. If included, search will run a galleryQuery search. Otherwise a normal search will proceed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "afn",
            "in": "query",
            "description": "Optional. Asset Fields Name config string.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PageAssetSummary"
            }
          }
        }
      }
    },
    "/v1/search/anonymous/accessCheck": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Check anonymous access to assets by id for a site.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "anonymousAssetAccessCheck",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "siteName",
            "in": "query",
            "description": "Site where assets are located",
            "required": true,
            "type": "string"
          },
          {
            "name": "assets",
            "in": "query",
            "description": "Comma Separated list of assets to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiListLong"
            }
          }
        }
      }
    },
    "/v1/search/anonymous/relatedAssets/{assetId}/{configId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Anonymous asset search.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "relatedAssetSearch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "siteName",
            "in": "query",
            "description": "Site where assets are located",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetId",
            "in": "path",
            "description": "Asset Id to find related assets for",
            "required": true,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "path",
            "description": "Related Query config Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortId",
            "in": "query",
            "description": "Sort id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "i",
            "in": "query",
            "description": "Page index",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "n",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          },
          {
            "name": "filterIds",
            "in": "query",
            "description": "Optional comma separated list of filter Ids",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValues",
            "in": "query",
            "description": "Optional comma separated list of filter values. The filter value must follow the format: filterId:value text. For example: 12345:02/03/2016",
            "required": false,
            "type": "string"
          },
          {
            "name": "afn",
            "in": "query",
            "description": "Optional. Asset Fields Name config string.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PageAssetSummary"
            }
          }
        }
      }
    },
    "/v1/search/anonymous/searchTerms": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Get the list of the search terms with document count that match the prefix text.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "assetSolrCloudAnonSearchTerm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "siteName",
            "in": "query",
            "description": "Site where assets are located",
            "required": true,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "The prefix text to retrieve matched search terms for",
            "required": true,
            "type": "string"
          },
          {
            "name": "maxTerms",
            "in": "query",
            "description": "Maximum number of terms to retrieve",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "prefix",
            "in": "query",
            "description": "True means search terms that start with the text. False means terms that contains this text within it.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CountedSearchTerms"
            }
          }
        }
      }
    },
    "/v1/search/assetSearchForUser": {
      "get": {
        "tags": [
          "Search"
        ],
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "searchForUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "assets",
            "in": "query",
            "description": "Comma Separated list of assets to retrieve.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortId",
            "in": "query",
            "description": "Sort id. If left blank, it will sort based on the configured default.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "i",
            "in": "query",
            "description": "Page index number. Initial page is 0.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "n",
            "in": "query",
            "description": "Number of results per page. The maximum number is 200.",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          },
          {
            "name": "userName",
            "in": "query",
            "description": "Username to search as.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "query",
            "description": "Sitename for search user.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PageAssetSummary"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/search/relatedAssets/{assetId}/{configId}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Anonymous asset search.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "relatedAssetSearch_get_v1_search_relatedAssets_by_assetId_by_configId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "Asset Id to find related assets for",
            "required": true,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "path",
            "description": "Related Query config Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortId",
            "in": "query",
            "description": "Sort id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "i",
            "in": "query",
            "description": "Page index",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "n",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          },
          {
            "name": "filterIds",
            "in": "query",
            "description": "Optional comma separated list of filter Ids",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValues",
            "in": "query",
            "description": "Optional comma separated list of filter values. The filter value must follow the format: filterId:value text. For example: 12345:02/03/2016",
            "required": false,
            "type": "string"
          },
          {
            "name": "afn",
            "in": "query",
            "description": "Optional. Asset Fields Name config string.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PageAssetSummary"
            }
          }
        }
      }
    },
    "/v1/search/searchTerms": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Get the list of the search terms with document count that match the prefix text.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "searchTerms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "The prefix text to retrieve matched search terms for",
            "required": true,
            "type": "string"
          },
          {
            "name": "maxTerms",
            "in": "query",
            "description": "Maximum number of terms to retrieve",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "prefix",
            "in": "query",
            "description": "True means search terms that start with the text. False means terms that contains this text within it.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CountedSearchTerms"
            }
          }
        }
      }
    },
    "/v1/search/thesaurusTerms": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Get the list of the thesaurus terms with document count that match the prefix text.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "thesaurusTerms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "siteName",
            "in": "query",
            "description": "Site where assets are located",
            "required": true,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "The prefix text to retrieve matched search terms for",
            "required": true,
            "type": "string"
          },
          {
            "name": "maxTerms",
            "in": "query",
            "description": "Maximum numbr of terms to retrieve",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiListString"
            }
          }
        }
      }
    },
    "/v1/search/typeAheadTerms": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Get the list of the thesaurus terms with document count that match the prefix text.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: There is no developer information provided for this endpoint.\n\n",
        "operationId": "thesaurusTerms_get_v1_search_typeAheadTerms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "siteName",
            "in": "query",
            "description": "Site where assets are located",
            "required": true,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "The prefix text to retrieve matched search terms for",
            "required": true,
            "type": "string"
          },
          {
            "name": "maxTerms",
            "in": "query",
            "description": "Maximum number of terms to retrieve",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "prefix",
            "in": "query",
            "description": "True means search terms that start with text. False means terms that contains this text within it.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiListString"
            }
          }
        }
      }
    },
    "/v1/search/vector": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Asset search.",
        "description": "<strong>Required Permissions</strong>: There are no required permissions for this endpoint.\n\n<strong>Developer Information</strong>: <ul><li>All filter ids are dependent on what site the search is being performed on.</li><li>If left blank, the default value for sortId is 0.</li><li>filterIds and filterValues are OPTIONAL fields. However, if you list one or more filterIds — AND the filterId requires a value — they must be accompanied by the appropriatevalues in the filterValues field.</li><li><strong>Filter Example 1:</strong> (Warning: filterId numbers will vary based on your site.) If you enter '1517' as a filterId, the filterValue field should include the filterId and a date or date range ('1517:11/28/2016 - 11/29/2016'). In this case, if no timestamp is included, the results will include all clips from that date, regardless of time.To include a timestamp, use the following format: '1998-03-04 23:59:59'.</li><li><strong>Filter Example 2:</strong> (Warning: filterId numbers will vary based on your site.) To use multiple filterIds use a comma-separated list for both filterIds and filterValues. If you enter '123,456,789' into the filterId field,you should enter '123:1080i,456:archive,789:\"Rights Managed\"' into the filterValue field.</li></ul>\n\n",
        "operationId": "assetVectorSearch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Query string. If left blank, it will return all clips.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortId",
            "in": "query",
            "description": "Sort id. If left blank, it will sort based on the configured default.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "i",
            "in": "query",
            "description": "Page index number. Initial page is 0.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "n",
            "in": "query",
            "description": "Number of results per page. The maximum number is 200.",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          },
          {
            "name": "filterIds",
            "in": "query",
            "description": "Comma separated list of filter ids to be applied to the query, regardless of whether those filters require values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValues",
            "in": "query",
            "description": "Comma separated pairs of filter ids and filter values. To be used when a filter id requires a value. Format is filterId:value, filterId:value.",
            "required": false,
            "type": "string"
          },
          {
            "name": "afn",
            "in": "query",
            "description": "Asset Fields Name config string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "query",
            "description": "Site to search",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Clips were found and returned",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          },
          "400": {
            "description": "No Assets were found due to bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-developerInformation": "<ul><li>All filter ids are dependent on what site the search is being performed on.</li><li>If left blank, the default value for sortId is 0.</li><li>filterIds and filterValues are OPTIONAL fields. However, if you list one or more filterIds — AND the filterId requires a value — they must be accompanied by the appropriatevalues in the filterValues field.</li><li><strong>Filter Example 1:</strong> (Warning: filterId numbers will vary based on your site.) If you enter '1517' as a filterId, the filterValue field should include the filterId and a date or date range ('1517:11/28/2016 - 11/29/2016'). In this case, if no timestamp is included, the results will include all clips from that date, regardless of time.To include a timestamp, use the following format: '1998-03-04 23:59:59'.</li><li><strong>Filter Example 2:</strong> (Warning: filterId numbers will vary based on your site.) To use multiple filterIds use a comma-separated list for both filterIds and filterValues. If you enter '123,456,789' into the filterId field,you should enter '123:1080i,456:archive,789:\"Rights Managed\"' into the filterValue field.</li></ul>"
      }
    },
    "/v1/transform/{definitionId}": {
      "get": {
        "tags": [
          "Clip Metadata Transform"
        ],
        "summary": "Retrieve asset metadata transformation script by script ID",
        "description": "<strong>Required Permissions</strong>: ViewTransformDefinitions\n\n<strong>Developer Information</strong>: Retrieves the metadata transformation script of an asset by transform definition ID\n\n",
        "operationId": "getTransformationScript",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "definitionId",
            "in": "path",
            "description": "Transformation script definition ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A transformation script was found",
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No transformation script found"
          }
        },
        "x-developerInformation": "Retrieves the metadata transformation script of an asset by transform definition ID",
        "x-requiredPermissions": "ViewTransformDefinitions"
      }
    }
  },
  "definitions": {
    "Locale": {
      "type": "object",
      "properties": {
        "language": {
          "type": "string"
        },
        "script": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "variant": {
          "type": "string"
        },
        "extensionKeys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "unicodeLocaleAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "unicodeLocaleKeys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "iso3Language": {
          "type": "string"
        },
        "iso3Country": {
          "type": "string"
        },
        "displayLanguage": {
          "type": "string"
        },
        "displayScript": {
          "type": "string"
        },
        "displayCountry": {
          "type": "string"
        },
        "displayVariant": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "DeliveryOptionTarget": {
      "type": "object",
      "properties": {
        "deliveryOptionId": {
          "type": "integer",
          "format": "int64"
        },
        "deliveryOptionLabel": {
          "type": "string"
        },
        "deliveryOptionGroupId": {
          "type": "string"
        }
      }
    },
    "AssetDetail": {
      "type": "object",
      "properties": {
        "assetId": {
          "type": "integer",
          "format": "int64"
        },
        "clipUrl": {
          "type": "string"
        },
        "clipThumbnailUrl": {
          "type": "string"
        },
        "detailTypeMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resourceClass": {
          "type": "string"
        },
        "hasDownloadableComp": {
          "type": "boolean",
          "default": false
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "accessPath": {
          "type": "string",
          "enum": [
            "ContentFilter",
            "ParentObject",
            "ShareUser"
          ]
        },
        "metaDataDefault": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValue"
          }
        }
      }
    },
    "Configuration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "url"
        },
        "text": {
          "type": "string"
        },
        "position": {
          "type": "string",
          "enum": [
            "top",
            "middle",
            "bottom",
            "tile"
          ]
        },
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "integer",
          "format": "int64"
        },
        "font": {
          "$ref": "#/definitions/Font"
        },
        "background": {
          "$ref": "#/definitions/Background"
        }
      }
    },
    "RenditionInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "purpose": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "type": "string"
        },
        "internalUri": {
          "type": "string"
        },
        "asperaSpec": {
          "type": "string"
        },
        "variant": {
          "type": "string"
        }
      }
    },
    "ApiListLong": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "AssetEditDetail": {
      "type": "object",
      "properties": {
        "siteName": {
          "type": "string"
        },
        "assetId": {
          "type": "integer",
          "format": "int64"
        },
        "lockUserName": {
          "type": "string"
        },
        "lockExpires": {
          "type": "string",
          "format": "date-time"
        },
        "editableFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetEditField"
          }
        }
      }
    },
    "Rendition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "clipId": {
          "type": "integer",
          "format": "int64"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "filesize": {
          "type": "integer"
        },
        "format": {
          "type": "string"
        },
        "height": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "purpose": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "variant": {
          "type": "string"
        },
        "width": {
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "GalleryResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "resultCount": {
          "type": "integer",
          "format": "int32"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "hasMore": {
          "type": "boolean",
          "default": false
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GalleryResult"
          }
        }
      }
    },
    "UserSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      }
    },
    "Page": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        },
        "currentPage": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "hasNextPage": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "numberOfPages": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "hasPreviousPage": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        }
      }
    },
    "AiwareTypeAheadTerm": {
      "type": "object",
      "properties": {
        "cognitiveCategory": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "entityId": {
          "type": "string"
        },
        "entityImage": {
          "type": "string"
        },
        "searchTerm": {
          "type": "string"
        },
        "identifierTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "libraryId": {
          "type": "string"
        },
        "docCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CollectionMetadataUpdateResponse": {
      "type": "object",
      "properties": {
        "summary": {
          "$ref": "#/definitions/CollectionMetadataSummary"
        },
        "failedAssetIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "ApiListDeliveryOption": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryOption"
          }
        }
      }
    },
    "CountedSearchTerms": {
      "type": "object",
      "properties": {
        "termsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchTerm"
          }
        }
      }
    },
    "FilterTree": {
      "type": "object",
      "properties": {
        "filterId": {
          "type": "integer",
          "format": "int64"
        },
        "filterValue": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "subFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterTree"
          }
        },
        "type": {
          "type": "string"
        },
        "alwaysShown": {
          "type": "boolean",
          "default": false
        },
        "field": {
          "type": "string"
        },
        "fieldValue": {
          "type": "string"
        },
        "clientMultiplier": {
          "type": "string"
        },
        "searchService": {
          "type": "string",
          "enum": [
            "dmh",
            "aiware"
          ]
        },
        "active": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "UpdateMetadataObj": {
      "type": "object",
      "properties": {
        "updateMetadata": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      }
    },
    "MediaType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "subtype": {
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "wildcardType": {
          "type": "boolean",
          "default": false
        },
        "wildcardSubtype": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "PageCollectionSummary": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CollectionSummary"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        },
        "currentPage": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "hasNextPage": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "numberOfPages": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "hasPreviousPage": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        }
      }
    },
    "UriBuilder": {
      "type": "object"
    },
    "Concept": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AssetShareInfo": {
      "type": "object",
      "properties": {
        "userEmail": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "comment": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "accessStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "accessEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "deliveryOptionIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "sendEmailNotification": {
          "type": "boolean",
          "default": false
        },
        "publicShare": {
          "type": "boolean",
          "default": false
        },
        "shareeAccountIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "createApiKeyForNonRegisteredRecipients": {
          "type": "boolean",
          "default": false
        },
        "shareSubtype": {
          "type": "string",
          "enum": [
            "request"
          ]
        },
        "assetId": {
          "type": "integer",
          "format": "int64"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ClipIdsResponse": {
      "type": "object",
      "properties": {
        "removedAssetIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "failedIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "Background": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string"
        },
        "opacity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SearchExpression": {
      "type": "object",
      "properties": {
        "fieldExpression": {
          "$ref": "#/definitions/FieldExpression"
        },
        "and": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchExpression"
          }
        },
        "or": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchExpression"
          }
        },
        "not": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "SearchTerm": {
      "type": "object",
      "properties": {
        "term": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FieldExpression": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "op": {
          "type": "string",
          "enum": [
            "In",
            "Contains",
            "Is",
            "GreaterThan",
            "LessThan"
          ]
        }
      }
    },
    "CacheInvalidateParams": {
      "type": "object",
      "properties": {
        "siteName": {
          "type": "string"
        },
        "cache": {
          "type": "string"
        }
      }
    },
    "NewClipRequest": {
      "type": "object",
      "properties": {
        "supplierId": {
          "type": "integer",
          "format": "int32"
        },
        "family": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "clipData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValue"
          }
        },
        "renditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rendition"
          }
        }
      }
    },
    "ApiListString": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AssetQuickView": {
      "type": "object",
      "properties": {
        "viewType": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValue"
          }
        },
        "url": {
          "type": "string"
        },
        "pricingType": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "imageQuickView": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "Collection": {
      "type": "object",
      "required": [
        "siteName"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "siteName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "integer",
          "format": "int64"
        },
        "editors": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "viewers": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "concepts": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Concept"
          }
        },
        "createdByIntegration": {
          "type": "boolean",
          "default": false
        },
        "oldCommerceId": {
          "type": "integer",
          "format": "int64"
        },
        "editorsCount": {
          "type": "integer",
          "format": "int32"
        },
        "tagsCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ClipData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "clipId": {
          "type": "integer",
          "format": "int32"
        },
        "inherited": {
          "type": "boolean",
          "default": false
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Link": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        },
        "uriBuilder": {
          "$ref": "#/definitions/UriBuilder"
        },
        "rel": {
          "type": "string"
        },
        "rels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "SmallPreviewSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "urls": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ApiListAiwareTypeAheadTerm": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AiwareTypeAheadTerm"
          }
        }
      }
    },
    "ApiList": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "CreateRenditionRequest": {
      "type": "object",
      "properties": {
        "purpose": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "overlayWatermark": {
          "type": "string"
        },
        "variant": {
          "type": "string"
        },
        "force": {
          "type": "boolean",
          "default": false
        },
        "startTime": {
          "type": "integer",
          "format": "int32"
        },
        "endTime": {
          "type": "integer",
          "format": "int32"
        },
        "thumbnailMs": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Font": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "opacity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Clip": {
      "type": "object",
      "required": [
        "family",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "family": {
          "type": "string"
        },
        "ingested": {
          "type": "string",
          "format": "date-time"
        },
        "liveDate": {
          "type": "string",
          "format": "date-time"
        },
        "lockExpires": {
          "type": "string",
          "format": "date-time"
        },
        "lockName": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 32
        },
        "clipData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClipData"
          }
        },
        "renditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rendition"
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "supplierId": {
          "type": "integer",
          "format": "int32"
        },
        "supplier": {
          "$ref": "#/definitions/Supplier"
        },
        "zombieDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AsperaSpec": {
      "type": "object",
      "properties": {
        "asperaSpec": {
          "type": "string"
        },
        "useType": {
          "type": "string"
        },
        "browserType": {
          "type": "string"
        },
        "assetId": {
          "type": "integer",
          "format": "int64"
        },
        "mobile": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "DeliveryOption": {
      "type": "object",
      "required": [
        "siteName"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "siteName": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "groupOrder": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "sourceUseType": {
          "type": "string"
        },
        "orderType": {
          "type": "string"
        },
        "transferType": {
          "type": "string",
          "enum": [
            "download",
            "aspera",
            "location",
            "youtube",
            "disabled"
          ]
        },
        "priceModel": {
          "type": "string",
          "enum": [
            "RoyaltyFree",
            "RightsManaged",
            "RightsManagedPerSecond",
            "DeliveryFee",
            "DeliveryFeePerSecond"
          ]
        },
        "locationId": {
          "type": "string"
        },
        "directory": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "transcodeTarget": {
          "$ref": "#/definitions/TranscodeTarget"
        },
        "outputFilename": {
          "type": "string"
        },
        "imageOverlay": {
          "type": "string"
        },
        "timecodeOverlay": {
          "type": "string",
          "enum": [
            "timecode_source",
            "timecode_stream"
          ]
        },
        "externalTokenId": {
          "type": "integer",
          "format": "int64"
        },
        "textOverlayScriptId": {
          "type": "integer",
          "format": "int64"
        },
        "applyTranscodeHandle": {
          "type": "boolean",
          "default": false
        },
        "ancillaryDelivery": {
          "type": "boolean",
          "default": false
        },
        "deliveryMetadataId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AssetShareResponse": {
      "type": "object",
      "properties": {
        "internal": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "shareUrl": {
          "type": "string"
        }
      }
    },
    "CollectionAssetSummary": {
      "type": "object",
      "properties": {
        "assetId": {
          "type": "integer",
          "format": "int64"
        },
        "timeStart": {
          "type": "string"
        },
        "timeEnd": {
          "type": "string"
        },
        "metaData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValue"
          }
        },
        "name": {
          "type": "string"
        },
        "thumbnail": {
          "$ref": "#/definitions/ThumbnailSummary"
        },
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "hasDownloadableComp": {
          "type": "boolean",
          "default": false
        },
        "metaDataDefault": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValue"
          }
        }
      }
    },
    "CreateRenditionByCore": {
      "type": "object",
      "properties": {
        "purpose": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "variant": {
          "type": "string"
        },
        "force": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "Supplier": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "address": {
          "type": "string"
        },
        "approvers": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "devName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "markup": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "rmPricing": {
          "type": "boolean",
          "default": false
        },
        "state": {
          "type": "string"
        },
        "supplierIds": {
          "type": "string"
        },
        "supplierRep": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplierData"
          }
        }
      }
    },
    "EntityTag": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "weak": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "TranscodeTarget": {
      "type": "object",
      "properties": {
        "transcodeTarget": {
          "type": "string"
        },
        "sourceType": {
          "type": "string",
          "enum": [
            "hdSourceNames",
            "sdSourceNames"
          ]
        }
      }
    },
    "NewCookie": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "maxAge": {
          "type": "integer",
          "format": "int32"
        },
        "expiry": {
          "type": "string",
          "format": "date-time"
        },
        "secure": {
          "type": "boolean",
          "default": false
        },
        "httpOnly": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "ClipIdsRequest": {
      "type": "object",
      "properties": {
        "clipIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "ApiListAssetDeliveryOption": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetDeliveryOption"
          }
        }
      }
    },
    "ApiListClip": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Clip"
          }
        }
      }
    },
    "ChildClipRequest": {
      "type": "object",
      "required": [
        "assetId"
      ],
      "properties": {
        "assetId": {
          "type": "integer",
          "format": "int64"
        },
        "timeStart": {
          "type": "integer",
          "format": "int32"
        },
        "timeEnd": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PageAssetSummary": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetSummary"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        },
        "currentPage": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "hasNextPage": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "numberOfPages": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "hasPreviousPage": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        }
      }
    },
    "OrderAsperaSpecList": {
      "type": "object",
      "properties": {
        "specs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lineItemIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AssetSummary": {
      "type": "object",
      "properties": {
        "assetId": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "metaData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValue"
          }
        },
        "metaDataDefault": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValue"
          }
        },
        "thumbnail": {
          "$ref": "#/definitions/ThumbnailSummary"
        },
        "smallPreview": {
          "$ref": "#/definitions/SmallPreviewSummary"
        },
        "hasDownloadableComp": {
          "type": "boolean",
          "default": false
        },
        "sliceStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "sliceStopTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ThumbnailSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "urls": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SupplierData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "supplierId": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "RenditionUrl": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "asperaSpec": {
          "type": "string"
        },
        "useType": {
          "type": "string"
        },
        "browserType": {
          "type": "string"
        },
        "assetId": {
          "type": "integer",
          "format": "int64"
        },
        "documentType": {
          "type": "string",
          "enum": [
            "video",
            "image",
            "pdf",
            "zip",
            "audio",
            "unknown"
          ]
        },
        "name": {
          "type": "string"
        },
        "fileSizeBytes": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "format": {
          "type": "string"
        },
        "mobile": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "AssetEditField": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "interfaceRequired": {
          "type": "boolean",
          "default": false
        },
        "helpText": {
          "type": "string"
        },
        "dataType": {
          "type": "string"
        },
        "inheritable": {
          "type": "boolean",
          "default": false
        },
        "deletable": {
          "type": "boolean",
          "default": false
        },
        "groupName": {
          "type": "string"
        },
        "array": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "CollectionSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "type": "string"
        },
        "userRole": {
          "type": "string"
        },
        "editors": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/UserSummary"
          }
        },
        "viewers": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/UserSummary"
          }
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "assetsCount": {
          "type": "integer",
          "format": "int32"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "collectionThumbnail": {
          "$ref": "#/definitions/ThumbnailSummary"
        },
        "concepts": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Concept"
          }
        }
      }
    },
    "PageCollectionAssetSummary": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CollectionAssetSummary"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        },
        "currentPage": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "hasNextPage": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        },
        "numberOfPages": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "hasPreviousPage": {
          "type": "boolean",
          "readOnly": true,
          "default": false
        }
      }
    },
    "NameValue": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "cookies": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/NewCookie"
          }
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "entity": {
          "type": "object"
        },
        "mediaType": {
          "$ref": "#/definitions/MediaType"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "entityTag": {
          "$ref": "#/definitions/EntityTag"
        },
        "links": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "stringHeaders": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allowedMethods": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "statusInfo": {
          "$ref": "#/definitions/StatusType"
        },
        "length": {
          "type": "integer",
          "format": "int32"
        },
        "language": {
          "$ref": "#/definitions/Locale"
        },
        "location": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "StatusType": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer",
          "format": "int32"
        },
        "reasonPhrase": {
          "type": "string"
        },
        "family": {
          "type": "string",
          "enum": [
            "INFORMATIONAL",
            "SUCCESSFUL",
            "REDIRECTION",
            "CLIENT_ERROR",
            "SERVER_ERROR",
            "OTHER"
          ]
        }
      }
    },
    "AssetDeliveryOption": {
      "type": "object",
      "properties": {
        "deliveryOptionId": {
          "type": "integer",
          "format": "int64"
        },
        "deliveryOptionLabel": {
          "type": "string"
        },
        "deliveryOptionTransferType": {
          "type": "string"
        },
        "deliveryOptionUseType": {
          "type": "string"
        },
        "deliveryOptionGroupId": {
          "type": "string"
        },
        "deliveryOptionGroupOrder": {
          "type": "string"
        },
        "renditionUrl": {
          "$ref": "#/definitions/RenditionUrl"
        }
      }
    },
    "CollectionMetadataSummary": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValue"
          }
        }
      }
    },
    "AdvancedSearchRequest": {
      "type": "object",
      "properties": {
        "searchExpression": {
          "$ref": "#/definitions/SearchExpression"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "sortField": {
          "type": "string"
        },
        "assetFieldsName": {
          "type": "string"
        },
        "descending": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "RenditionInfoList": {
      "type": "object",
      "properties": {
        "assetId": {
          "type": "integer",
          "format": "int64"
        },
        "renditionInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RenditionInfo"
          }
        }
      }
    },
    "Transform": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "supplierAlias": {
          "type": "string"
        },
        "locationUuid": {
          "type": "string"
        },
        "enabled": {
          "type": "integer",
          "format": "int32"
        },
        "orderIndex": {
          "type": "integer",
          "format": "int32"
        },
        "transformation": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}
